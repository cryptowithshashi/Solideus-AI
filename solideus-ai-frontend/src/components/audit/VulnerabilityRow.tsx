import React from 'react';
import { ChevronDown, AlertTriangle } from 'lucide-react';
import { Button } from '@/components/ui/button';

interface Vulnerability {
  id: string;
  name: string;
  severity: 'High' | 'Medium' | 'Low';
  description: string;
}

interface VulnerabilityRowProps {
  vulnerability: Vulnerability;
}

const VulnerabilityRow: React.FC<VulnerabilityRowProps> = ({ vulnerability }) => {
  const [isOpen, setIsOpen] = React.useState(false);

  const severityColor = {
    High: 'text-red-500',
    Medium: 'text-yellow-500',
    Low: 'text-green-500',
  };

  return (
    <div className="border-b border-gray-200 dark:border-gray-700">
      <div
        className="flex items-center p-4 cursor-pointer"
        onClick={() => setIsOpen(!isOpen)}
      >
        <AlertTriangle className={`h-5 w-5 mr-4 ${severityColor[vulnerability.severity]}`} />
        <div className="flex-grow">
          <p className="font-semibold">{vulnerability.name}</p>
          <p className={`text-sm ${severityColor[vulnerability.severity]}`}>
            {vulnerability.severity}
          </p>
        </div>
        <ChevronDown
          className={`h-5 w-5 transform transition-transform ${
            isOpen ? 'rotate-180' : ''
          }`}
        />
      </div>
      {isOpen && (
        <div className="p-4 bg-gray-50 dark:bg-gray-800">
          <p>{vulnerability.description}</p>
        </div>
      )}
    </div>
  );
};

export default VulnerabilityRow;
